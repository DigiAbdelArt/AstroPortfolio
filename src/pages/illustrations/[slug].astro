---
import { sanityClient } from "sanity:client";
import { PortableText } from "astro-portabletext";
import { imageUrlFor } from "@/lib/utils";
import Layout from "@/layouts/Layout.astro";
import LucideIcon from "@/components/ui/LucideIcon.astro";
import { ChevronLeft, ChevronRight } from "lucide";

export async function getStaticPaths() {
  const query = `
  *[_type == "illustrations"]
| order(orderRank) {
  ...,
  images[] {
    asset-> {
      url,
      metadata {
        lqip,
        palette {
          dominant
        },
        dimensions {
          width,
          height,
          "twAspectRatio": "auto " + string(width) + " / " + string(height),
        }
      }
    },
    colSpan
  }
}
`;
  const posts = await sanityClient.fetch(query);
  return posts.map((props, id) => {
    const prevArticle = posts[id - 1];
    const nextArticle = posts[id + 1];
    const { slug, title, excerpt, images } = props;
    let processedImgs = images.map((img) => ({
      width: img.asset.metadata.dimensions.width,
      height: img.asset.metadata.dimensions.height,
      src: imageUrlFor(img).format("webp").url(),
      alt: title,
      colSpan: img.colSpan,
      twAspectRatio: img.asset.metadata.dimensions.twAspectRatio,
      lqip: img.asset.metadata.lqip,
      dominantBackground: img.asset.metadata.palette.dominant.background,
    }));
    return {
      params: { slug: slug.current },
      props: { slug, title, excerpt, processedImgs, prevArticle, nextArticle },
    };
  });
}
const { title, excerpt, processedImgs, prevArticle, nextArticle } = Astro.props;
---

<Layout title={title}>
  <section class="p-4 sm:p-12">
    <article class="grid grid-cols-6 grid-rows-1 justify-items-center gap-2">
      <div
        class="text-center col-span-6 prose prose-slate prose-sm md:prose-lg mx-auto mb-16 md:mb-24 lg:mb-32"
      >
        <PortableText value={excerpt} />
      </div>
      {
        processedImgs.map((img) => (
          <div style={`grid-column:${img.colSpan}`} class=" w-full h-full">
            <figure class="relative">
              <img
                style={`--aspect-ratio:${img.twAspectRatio}`}
                width={img.width}
                height={img.height}
                src={img.src}
                alt={img.alt}
                data-is-hidden="true"
                class=" absolute inset-0 z-10 data-[is-hidden=true]:opacity-0 opacity-100 transition-opacity duration-100 ease-out"
                onload="this.dataset.isHidden=false;this.nextElementSibling.dataset.isLoaded=true;"
              />
              <div
                data-is-loaded="false"
                class="bg-no-repeat [image-rendering:pixelated]  bg-[size:100%_100%] z-0 opacity-100 duration-100 ease-out transition-opacity data-[is-loaded=true]:opacity-0"
                style={`
        background-color:${img.dominantBackground};
        background-image:url(${img.lqip});`}
              />
            </figure>
          </div>
        ))
      }
    </article>

    <div class="flex flex-row w-full justify-between mt-8">
      {
        prevArticle && (
          <a
            class="mr-auto flex flex-row-reverse gap-1 items-center"
            href={`/${prevArticle._type}/${prevArticle.slug.current}`}
          >
            <h3 class="text-left"> {prevArticle.title} </h3>
            <LucideIcon class="w-8 h-8" icon={ChevronLeft} />
          </a>
        )
      }
      {
        nextArticle && (
          <a
            class="ml-auto flex flew-row gap-1 items-center"
            href={`/${nextArticle._type}/${nextArticle.slug.current}`}
          >
            <h3 class="text-right">{nextArticle.title} </h3>
            <LucideIcon class="w-8 h-8" icon={ChevronRight} />
          </a>
        )
      }
    </div>
  </section>
</Layout>
